# 导包import unittestimport loggingfrom api.login import TestLoginApifrom utils import assert_commondef Headers():    headers = {"Content-Type": "application/json"}    return headersclass TestIHRMLogin(unittest.TestCase):    # 类方法初始化    @classmethod    def setUpClass(cls):        cls.login_url = "http://ihrm-test.itheima.net" + "/api/sys/login"        cls.login_api = TestLoginApi()        cls.headers = Headers()  # 实例化请求头    @classmethod    def tearDownClass(cls):        ...    # 编写第一个案例,测试登录成功    def test01_login_success(self):        # IHRM项目可以直接发送登录请求        headers = self.headers  # 定义请求头        jsonData = {"mobile": "13800000002", "password": "123456"}  # json数据        # 发送登录请求        response = self.login_api.login(jsonData, headers)        # 打印登录结果        result = response.json()        logging.info("test01-登录的结果为:{}".format(result))        # 断言        assert_common(self, 200, True, 10000, "操作成功", response)    def test02_mobile_is_not_exist(self):        # IHRM项目可以直接发送登录请求        headers = self.headers  # 定义请求头        jsonData = {"mobile": "13800000300", "password": "123456"}  # json数据        # 发送登录请求        response = self.login_api.login(jsonData, headers)        # 打印登录结果        result = response.json()        logging.info("test02-登录的结果为:{}".format(result))        # # 断言登录的结果        assert_common(self, 200, False, 20001, "用户名或密码错误", response)    def test03_password_is_error(self):        # IHRM项目可以直接发送登录请求        headers = self.headers  # 定义请求头        jsonData = {"mobile": "13800000002", "password": "error"}  # json数据        # 发送登录请求        response = self.login_api.login(jsonData, headers)        # 打印登录结果        result = response.json()        logging.info("test03-登录的结果为:{}".format(result))        # 断言登录的结果        assert_common(self, 200, False, 20001, "用户名或密码错误", response)    def test04_mobile_is_empty(self):        # IHRM项目可以直接发送登录请求        headers = self.headers  # 定义请求头        jsonData = {"mobile": "", "password": "error"}  # json数据        # 发送登录请求        response = self.login_api.login(jsonData, headers)        # 打印登录结果        result = response.json()        logging.info("test04-登录的结果为:{}".format(result))        # 断言登录的结果        assert_common(self, 200, False, 20001, "用户名或密码错误", response)    def test05_password_is_empty(self):        # IHRM项目可以直接发送登录请求        headers = self.headers  # 定义请求头        jsonData = {"mobile": "13800000002", "password": ""}  # json数据        # 发送登录请求        response = self.login_api.login(jsonData, headers)        # 打印登录结果        result = response.json()        logging.info("test05-登录的结果为:{}".format(result))        # 断言登录的结果        assert_common(self, 200, False, 20001, "用户名或密码错误", response)    def test06_mobile_has_special_char(self):        # IHRM项目可以直接发送登录请求        headers = self.headers  # 定义请求头        jsonData = {"mobile": "138000000**", "password": "123456"}  # json数据        # 发送登录请求        response = self.login_api.login(jsonData, headers)        # 打印登录结果        result = response.json()        logging.info("test06-登录的结果为:{}".format(result))        # 断言登录的结果        assert_common(self, 200, False, 20001, "用户名或密码错误", response)    def test07_more_params(self):        # IHRM项目可以直接发送登录请求        headers = self.headers  # 定义请求头        jsonData = {"mobile": "13800000002", "password": "123456", "": ""}  # json数据        # 发送登录请求        response = self.login_api.login(jsonData, headers)        # 打印登录结果        result = response.json()        logging.info("test07-登录的结果为:{}".format(result))        # 断言登录的结果        assert_common(self, 200, True, 10000, "操作成功", response)    def test08_miss_params_password(self):        # IHRM项目可以直接发送登录请求        headers = self.headers  # 定义请求头        jsonData = {"mobile": "13800000002"}  # json数据        # 发送登录请求        response = self.login_api.login(jsonData, headers)        # 打印登录结果        result = response.json()        logging.info("test08-登录的结果为:{}".format(result))        # 断言登录的结果        assert_common(self, 200, False, 20001, "用户名或密码错误", response)    def test09_miss_params_mobile(self):        # IHRM项目可以直接发送登录请求        headers = self.headers  # 定义请求头        jsonData = {"password": "123456"}  # json数据        # 发送登录请求        response = self.login_api.login(jsonData, headers)        # 打印登录结果        result = response.json()        logging.info("test09-登录的结果为:{}".format(result))        # 断言登录的结果        assert_common(self, 200, False, 20001, "用户名或密码错误", response)    def test10_whithout_params_(self):        # IHRM项目可以直接发送登录请求        headers = self.headers  # 定义请求头        jsonData = {}  # json数据        # 发送登录请求        response = self.login_api.login(jsonData, headers)        # 打印登录结果        result = response.json()        logging.info("test10-登录的结果为:{}".format(result))        # 断言登录的结果        assert_common(self, 200, False, 20001, "用户名或密码错误", response)    def test11_error_params_(self):        # IHRM项目可以直接发送登录请求        headers = self.headers  # 定义请求头        jsonData = {"mobole": "13800000002", "password": "123456"}  # json数据        # 发送登录请求        response = self.login_api.login(jsonData, headers)        # 打印登录结果        result = response.json()        logging.info("test11-登录的结果为:{}".format(result))        # 断言登录的结果        assert_common(self, 200, False, 20001, "用户名或密码错误", response)    def test12_None(self):        # IHRM项目可以直接发送登录请求        headers = self.headers  # 定义请求头        jsonData = None  # json数据        # 发送登录请求        response = self.login_api.login(jsonData, headers)        # 打印登录结果        result = response.json()        logging.info("test12-登录的结果为:{}".format(result))        # 断言登录的结果        assert_common(self, 200, False, 99999, "抱歉，系统繁忙，请稍后重试", response)