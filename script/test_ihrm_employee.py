# 导包import unittestimport loggingimport requests# 创建测试类,集成unittest.TestCasefrom api.employee_api import TestEmplyeeApifrom utils import assert_commonclass TestIHRMEmployee(unittest.TestCase):    # 初始化测试类    def setUp(self):        self.login_url = "http://ihrm-test.itheima.net" + "/api/sys/login"        self.emp_url = "http://ihrm-test.itheima.net" + "/api/sys/user"        self.emp_api = TestEmplyeeApi()    def tearDown(self):        ...    # 创建测试员工增删改查的函数    def test01_employee_manage(self):        # 实现员工的增删改查        # 登录        response = requests.post(url=self.login_url, json={"mobile": "13800000002", "password": "123456"})        # 打印登录的数据        print("登录的结果为:", response.json().get("message"))        # 提取令牌        token = response.json().get('data')        # 保存令牌到请求头当中        headers = {"Content-Type": "application/json", "Authorization": "Bearer " + token}        # 1.添加员工        response = self.emp_api.add_emp(headers, "哥白尼", "136200000009")        # 打印添加的结果        # print("添加员工的结果为:", response.json().get("message"))        logging.info("添加员工的结果为:{}".format(response.json()))        # 断言        assert_common(self, 200, True, 10000, "操作成功",response)        # 获取员工id        emp_id = response.json().get("data").get("id")        # 2.查询员工        # query_url = self.emp_url + "/" + emp_id        # print("查询员工的URL为:", query_url)        # 发送查询员工的请求        response = self.emp_api.query_emp(emp_id, headers)        # print("查询员工的结果为:", response.json().get('data').get('username'))        logging.info("添加员工的结果为:{}".format(response.json()))        # 断言        assert_common(self, 200, True, 10000, "操作成功",response)        # 3.修改员工        modify_url = self.emp_url + "/" + emp_id        response = self.emp_api.modify_emp(emp_id, "爱因斯坦", headers)        # print("修改员工的结果为:", response.json().get("message"))        logging.info("修改员工的结果为:{}".format(response.json()))        # 断言        assert_common(self, 200, True, 10000, "操作成功",response)        # 2.查询员工        # query_url = self.emp_url + "/" + emp_id        # print("查询员工的URL为:", query_url)        # 发送查询员工的请求        response = self.emp_api.query_emp(emp_id, headers)        # print("查询员工的结果为:", response.json().get('data').get('username'))        logging.info("查询员工的结果为:{}".format(response.json()))        # 断言        assert_common(self, 200, True, 10000, "操作成功",response)        # 4.删除员工        # delete_url = self.emp_url + "/" + emp_id        # 发送删除员工的请求        response = self.emp_api.delete_emp(emp_id, headers)        # 打印删除的结果        # print("删除的结果为:", response.json().get("message"))        logging.info("删除的结果为:{}".format(response.json()))        # 断言        assert_common(self, 200, True, 10000, "操作成功",response)